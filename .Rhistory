select(a, "a")
library(tidyverse)
select(a, "a")
data %>%
select(!!col)
library(tidyverse)
col <- enquo(col)
ab <- function(data, col) {
col <- enquo(col)
data %>%
select(!!col)
}
ab(a, "a")
ab(a, "value")
a
ab <- function(data, col, a) {
col <- enquo(col)
filter(a, !!col==a)
}
ab(a, col = "a", a = "q")
filter(data, !!col==a)
ab(a, col = "a", a = "q")
filter(data, col==a)
ab <- function(data, col, a) {
col <- enquo(col)
filter(data, col==a)
}
filter(data, col==a)
ab(a, col = "a", a = "q")
ab(a, col = "a", a = "q")
ab <- function(data, col, a) {
col <- enquo(col)
filter(data, !!col==a)
}
ab(a, col = "a", a = "q")
ab(a, col = "a", a = "a")
ab(a, col = "a", a = "t")
ab(a, col = "q", a = "t")
ab(a, col = "q")
ab(a)
ab(a, col == a)
ab(a, col = "a2)
ab(a, col = "a")
ab(a, col = "q")
filter(a, "q")
filter(a, "q")
ab <- function(data, col) {
col <- enquo(col)
select(data, !!col)
}
ab(a)
a
ab(a, "q")
ab(a, "a")
ab <- function(data, col, t) {
filter(col == t)
}
ab(a,"q
")
ab(a, col = "a", t = "q")
ab(a, "a", t = "q")
ab <- function(data, col, t) {
filter(data, col == t)
}
ab(a, "a", "q")
ab(a, "a")
ab(a, "a", t = "a")
ab(a, "a", t = "q")
a
select(a, "hello")
select(a, "value")
length(a)
count(a)
a[2,]
b<- data.frame(a=c("a","a","a","a","s","s","s","s"), values=c(2,1,4,2,3,5,3,1))
b
t.test(values)
t.test(values ~ a, a)
t.test(values ~ a, b)
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- cbind(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(ctrl)
return(cdata)
return(count)
}
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- cbind(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(ctrl)
return(cdata)
return(count)
}
r4.t.test
r4.t.test(a, "a", "value", "a")
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- cbind(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(ctrl)
return(cdata)
return(count)
}
r4.t.test(a, "a", "value", "a")
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- cbind(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(cdata)
return(count)
}
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- cbind(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(cdata)
return(count)
}
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- data.frame(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(cdata)
return(count)
}
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- cbind(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(cdata)
return(count)
}
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- data.frame(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(cdata)
return(count)
}
r4.t.test(a, "a", "value", "a")
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- data.frame(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(count)
}
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- data.frame(group = cname, value = cvalue)
ctrl <- subset(cdata, cname == control)
count <- count(data)
return(count)
}
r4.t.test(a, "a", "value", "a")
a[1,]
a[3,]
factor(a)
factor(a$a)
levels(a$a)
a
factor(a$a)
z<-factor(a$a)
z
levels(factor(a$a))
a["o"]
a["o",]
subset(a, a = z[1])
subset(a, a == z[1])
subset(a, a == z[2])
r4.t.test <- function(data, name, value, control) {
cname <- select(data, all_of(name))
cvalue <- select(data, all_of(value))
cdata <- data.frame(group = cname, value = cvalue)
groups <- levels(factor(cdata$group))
collate <- c()
n <- count(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == ctrl)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
r4.t.test(a, "a", "value", "a")
cname <- select(a, all_of(a))
cname
cname <- select(a, a)
cname
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
groups <- levels(factor(cdata$group))
collate <- c()
n <- count(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == ctrl)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
r4.t.test(a, "a", "value", "a")
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
groups <- levels(factor(cdata$group))
collate <- c()
n <- count(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == ctrl)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
r4.t.test(a, "a", "value", "a")
cname <- select(a, a)
cvalue <- select(a, value)
cname
cvalue
cdata <- data.frame(group = cname, value = cvalue)
cdata
cdata <- data.frame(group = cname, value = cvalue)
cdata
cdata <- data.frame("group" = cname, value = cvalue)
cdata
cname <- select(a, a)
cvalue <- select(a, value)
cdata <- data.frame(cname, cvalue)
colnames(cdata) <- c("group", "value")
cdata
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
collate <- c()
n <- count(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == ctrl)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
r4.t.test(a, "a", "value", "a")
groups <- levels(factor(cdata$group))
groups
count(groups)
groups
?factor
?levels
levels(cdata$group)
as.vector(groups)
as.vector(groups)[1]
as.vector(groups)[2]
groups[1]
groups[2]
length(groups)
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
collate <- c()
n <- length(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == ctrl)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
r4.t.test(a, "a", "value", "a")
r4.t.test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
collate <- c()
n <- length(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == control)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
r4.t.test(a, "a", "value", "a")
t.test(
subset(cdata, group == "a")$value,
subset(cdata, group == "a")$value
)$p.value
t.test(
subset(cdata, group == "a")$value,
subset(cdata, group == "o")$value
)$p.value
a
a<-rbind(a,a)
t.test(
subset(cdata, group == "a")$value,
subset(cdata, group == "o")$value
)$p.value
subset(cdata, group == "a")$value
cdata<-a
t.test(
subset(cdata, group == "a")$value,
subset(cdata, group == "o")$value
)$p.value
t.test(
subset(cdata, a == "a")$value,
subset(cdata, ap == "o")$value
)$p.value
t.test(
subset(cdata, a == "a")$value,
subset(cdata, a == "o")$value
)$p.value
colnames(cdata) <- c("group", "value")
cdata
a<-data.frame(c(1,3,4,5,2,1,2,3,6,4), c("a","b","a","b","a","b","a","b","a","b"))
cname <- select(a, a)
cdata <- a
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
count(groups)
length(groups)
groups <- levels(factor(cdata$group))
factor(cdata$group)
colnames(cdata) <- c("value", "group")
cdata <- a
colnames(cdata) <- c("value", "group")
groups <- levels(factor(cdata$group))
length(groups)
groups
t.test(
subset(cdata, a == "a")$value,
subset(cdata, a == "b")$value
)$p.value
t.test(
subset(cdata, group == "a")$value,
subset(cdata, group == "b")$value
)$p.value
group_t_test(cdata, "group", "value", "a")
group_t_test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
collate <- c()
n <- length(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == control)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
group_t_test(cdata, "group", "value", "a")
group_t_test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
collate <- c()
n <- length(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == control)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n = count) { break }
group_t_test <- function(data, name, value, control) {
cname <- select(data, name)
cvalue <- select(data, value)
cdata <- data.frame(group = cname, value = cvalue)
colnames(cdata) <- c("group", "value")
groups <- levels(factor(cdata$group))
collate <- c()
count <- length(groups)
n <- 0
repeat {
n <- n+1
p <- t.test(
subset(cdata, group == groups[n])$value,
subset(cdata, group == control)$value
)$p.value
result <- data.frame(group = groups[n], p = p)
collate <- rbind(collate, result)
if (n == count) { break }
}
return(collate)
}
group_t_test(cdata, "group", "value", "a")
source("~/OneDrive - University of Edinburgh/00 PhD/03 Data/00 Custom packages/MatinPhD/R/group_t_test.R")
source("~/OneDrive - University of Edinburgh/00 PhD/03 Data/00 Custom packages/MatinPhD/R/group_t_test.R")
source("~/OneDrive - University of Edinburgh/00 PhD/03 Data/00 Custom packages/MatinPhD/R/group_t_test.R")
library(MatinPhD)
rComplement <- function(sequence, species = "DNA") {
seq<-unlist(strsplit(sequence, ""))
A <- which(seq %in% "A")
a <- which(seq %in% "a")
C <- which(seq %in% "C")
c <- which(seq %in% "c")
G <- which(seq %in% "G")
g <- which(seq %in% "g")
T. <- which(seq %in% "T")
t <- which(seq %in% "t")
U <- which(seq %in% "U")
u <- which(seq %in% "u")
if(species == "DNA")  {
seq[A] <- "T"
}
if(species == "RNA") {
seq[A] <- "U"
}
if(species == "DNA")  {
seq[a] <- "t"
}
if(species == "RNA") {
seq[a] <- "u"
}
seq[C] <- "G"
seq[c] <- "g"
seq[G] <- "C"
seq[g] <- "c"
seq[T.] <- "A"
seq[t] <- "a"
seq[U] <- "A"
seq[u] <- "a"
comp <- paste(seq, collapse="")
rev.comp <- paste(rev(seq), collapse="")
list(
input_sequence = sequence,
complement = comp,
reverse_complement = rev.comp
)
}
rComplement("AACG")
